// Generated by LiveScript 1.5.0
(function(){
  var knex, Adapter, SQL;
  knex = require('knex');
  Adapter = require('./Adapter');
  SQL = (function(superclass){
    var prototype = extend$((import$(SQL, superclass).displayName = 'SQL', SQL), superclass).prototype, constructor = SQL;
    function SQL(config){
      this.config = {};
      this.config.client = config.type;
      this.config.connection = config;
      this.driver = knex(this.config);
    }
    SQL.prototype.query = function(builder){
      return this.driver(builder.model.name).select('*');
    };
    return SQL;
  }(Adapter));
  module.exports = SQL;
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
